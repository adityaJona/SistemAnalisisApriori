/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author user
 */
public class AnalisisApriori extends javax.swing.JFrame {

    DefaultTableModel model;
    String data[];
    
    public AnalisisApriori() {
        initComponents();
        
        model = new DefaultTableModel();
        data = new String[5];
        model.addColumn("Maskapai 1");
        model.addColumn("Maskapai 2");
        model.addColumn("Maskapai 3");
        model.addColumn("Maskapai 4");
        model.addColumn("Maskapai 5");
        tb.setModel(model);
        
        Dimension screenSize =
        Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if(frameSize.height > screenSize.height){
            frameSize.height = screenSize.height;
        }
        if(frameSize.width > screenSize.width){
            frameSize.width = screenSize.width;
        }
        this.setLocation(
                (screenSize.width - frameSize.width)/2, 
                (screenSize.height - frameSize.height)/2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodypanel = new javax.swing.JPanel();
        tittlepanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        menupanel = new javax.swing.JPanel();
        masukandata = new javax.swing.JButton();
        analisisapriori = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        mainpanel = new javax.swing.JPanel();
        inputpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bs = new javax.swing.JRadioButton();
        bg = new javax.swing.JRadioButton();
        bw = new javax.swing.JRadioButton();
        tambahkan = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        hapussemua = new javax.swing.JButton();
        bl = new javax.swing.JRadioButton();
        bb = new javax.swing.JRadioButton();
        analisispanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ns = new javax.swing.JTextField();
        nc = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        hasil = new javax.swing.JTextArea();
        detail = new javax.swing.JButton();
        hsl = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SistemAnalisisApriori");

        bodypanel.setBackground(new java.awt.Color(52, 73, 94));

        tittlepanel.setBackground(new java.awt.Color(52, 73, 94));
        tittlepanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SISTEM ANALISIS APRIORI");

        javax.swing.GroupLayout tittlepanelLayout = new javax.swing.GroupLayout(tittlepanel);
        tittlepanel.setLayout(tittlepanelLayout);
        tittlepanelLayout.setHorizontalGroup(
            tittlepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tittlepanelLayout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tittlepanelLayout.setVerticalGroup(
            tittlepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tittlepanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        menupanel.setBackground(new java.awt.Color(52, 73, 94));
        menupanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        masukandata.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Pictures\\3.png")); // NOI18N
        masukandata.setText("MASUKAN DATA");
        masukandata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masukandataActionPerformed(evt);
            }
        });

        analisisapriori.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Pictures\\analisis1.png")); // NOI18N
        analisisapriori.setText("ANALISIS APRIORI");
        analisisapriori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analisisaprioriActionPerformed(evt);
            }
        });

        keluar.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Pictures\\logout1.png")); // NOI18N
        keluar.setText("KELUAR");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menupanelLayout = new javax.swing.GroupLayout(menupanel);
        menupanel.setLayout(menupanelLayout);
        menupanelLayout.setHorizontalGroup(
            menupanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menupanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(analisisapriori)
                .addGap(40, 40, 40))
            .addGroup(menupanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menupanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masukandata)
                    .addComponent(keluar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menupanelLayout.setVerticalGroup(
            menupanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menupanelLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(masukandata)
                .addGap(31, 31, 31)
                .addComponent(analisisapriori)
                .addGap(32, 32, 32)
                .addComponent(keluar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpanel.setBackground(new java.awt.Color(52, 73, 94));
        mainpanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        mainpanel.setLayout(new java.awt.CardLayout());

        inputpanel.setBackground(new java.awt.Color(52, 73, 94));

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Maskapai 1", "Maskapai 2", "Maskapai 3", "Maskapai 4", "Maskapai 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MASUKKAN DATA");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("------------------------------------------------------------------------------------------");

        bs.setForeground(new java.awt.Color(255, 255, 255));
        bs.setText("SRIWIJAYA");

        bg.setForeground(new java.awt.Color(255, 255, 255));
        bg.setText("GARUDA");

        bw.setForeground(new java.awt.Color(255, 255, 255));
        bw.setText("WINGS");

        tambahkan.setText("TAMBAHKAN");
        tambahkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahkanActionPerformed(evt);
            }
        });

        hapus.setText("HAPUS");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        hapussemua.setText("HAPUS SEMUA");
        hapussemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapussemuaActionPerformed(evt);
            }
        });

        bl.setForeground(new java.awt.Color(255, 255, 255));
        bl.setText("LION");

        bb.setForeground(new java.awt.Color(255, 255, 255));
        bb.setText("BATIK");

        javax.swing.GroupLayout inputpanelLayout = new javax.swing.GroupLayout(inputpanel);
        inputpanel.setLayout(inputpanelLayout);
        inputpanelLayout.setHorizontalGroup(
            inputpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(inputpanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE))
                    .addGroup(inputpanelLayout.createSequentialGroup()
                        .addGroup(inputpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bb)
                            .addComponent(bl)
                            .addComponent(bw)
                            .addComponent(bs)
                            .addComponent(bg)
                            .addGroup(inputpanelLayout.createSequentialGroup()
                                .addComponent(tambahkan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hapus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hapussemua)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        inputpanelLayout.setVerticalGroup(
            inputpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(bs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bw)
                .addGap(18, 18, 18)
                .addGroup(inputpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapussemua)
                    .addComponent(tambahkan)
                    .addComponent(hapus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainpanel.add(inputpanel, "card2");

        analisispanel.setBackground(new java.awt.Color(52, 73, 94));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ANALISIS APRIORI");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("-----------------------------------------------------------------------------------------------------------");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nilai Support");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nilai Confidence");

        hasil.setColumns(20);
        hasil.setRows(5);
        jScrollPane2.setViewportView(hasil);

        detail.setText("DETAIL");
        detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailActionPerformed(evt);
            }
        });

        hsl.setText("HASIL");
        hsl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hslActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout analisispanelLayout = new javax.swing.GroupLayout(analisispanel);
        analisispanel.setLayout(analisispanelLayout);
        analisispanelLayout.setHorizontalGroup(
            analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(analisispanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(analisispanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE))
                    .addGroup(analisispanelLayout.createSequentialGroup()
                        .addGroup(analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(analisispanelLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ns, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nc, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(analisispanelLayout.createSequentialGroup()
                                .addComponent(hsl)
                                .addGap(25, 25, 25)
                                .addComponent(detail))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        analisispanelLayout.setVerticalGroup(
            analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(analisispanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(analisispanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detail)
                    .addComponent(hsl))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        mainpanel.add(analisispanel, "card3");

        javax.swing.GroupLayout bodypanelLayout = new javax.swing.GroupLayout(bodypanel);
        bodypanel.setLayout(bodypanelLayout);
        bodypanelLayout.setHorizontalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tittlepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bodypanelLayout.createSequentialGroup()
                        .addComponent(menupanel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bodypanelLayout.setVerticalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tittlepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menupanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahkanActionPerformed
        if(bs.isSelected() && bl.isSelected() && bb.isSelected() && bg.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[2] = bb.getText();data[3] = bg.getText();data[4] = bw.getText();
       }
       else if(bs.isSelected() && bl.isSelected() && bb.isSelected() && bg.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[2] = bb.getText();data[3] = bg.getText();data[4] = "";
       }
       else if(bs.isSelected() && bl.isSelected() && bb.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[2] = bb.getText();data[4] = bw.getText();data[3] = "";
       }
       else if(bs.isSelected() && bl.isSelected() && bg.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[3] = bg.getText();data[4] = bw.getText();data[2] = "";
       }
       else if(bs.isSelected() && bb.isSelected() && bg.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[2] = bb.getText();data[3] = bg.getText();data[4] = bw.getText();data[1] = "";
       }
       else if(bl.isSelected() && bb.isSelected() && bg.isSelected() && bw.isSelected()){
           data[1] = bl.getText();data[2] = bb.getText();data[3] = bg.getText();data[4] = bw.getText();data[0] = "";
       }
       else if(bs.isSelected() && bl.isSelected() && bb.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[2] = bb.getText();data[3] = "";data[4] = "";
       }
       else if(bs.isSelected() && bl.isSelected() && bg.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[3] = bg.getText();data[2] = "";data[4] = "";
       }
       else if(bs.isSelected() && bl.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[4] = bw.getText();data[2] = "";data[3] = "";
       }
       else if(bs.isSelected() && bb.isSelected() && bg.isSelected()){
           data[0] = bs.getText();data[2] = bb.getText();data[3] = bg.getText();data[1] = "";data[4] = "";
       }
       else if(bs.isSelected() && bb.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[2] = bb.getText();data[4] = bw.getText();data[1] = "";data[3] = "";
       }
       else if(bs.isSelected() && bg.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[3] = bg.getText();data[4] = bw.getText();data[1] = "";data[2] = "";
       }
       else if(bl.isSelected() && bb.isSelected() && bg.isSelected()){
           data[1] = bl.getText();data[2] = bb.getText();data[3] = bg.getText();data[0] = "";data[4] = "";
       }
       else if(bl.isSelected() && bb.isSelected() && bw.isSelected()){
           data[1] = bl.getText();data[2] = bb.getText();data[4] = bw.getText();data[0] = "";data[3] = "";
       }
       else if(bl.isSelected() && bg.isSelected() && bw.isSelected()){
           data[1] = bl.getText();data[3] = bg.getText();data[4] = bw.getText();data[0] = "";data[2] = "";
       }
       else if(bb.isSelected() && bg.isSelected() && bw.isSelected()){
           data[2] = bb.getText();data[3] = bg.getText();data[4] = bw.getText();data[0] = "";data[1] = "";
       }
       else if(bs.isSelected() && bl.isSelected()){
           data[0] = bs.getText();data[1] = bl.getText();data[2] = "";data[3] = "";data[4] = "";
       }
       else if(bs.isSelected() && bb.isSelected()){
           data[0] = bs.getText();data[2] = bb.getText();data[1] = "";data[3] = "";data[4] = "";
       }
       else if(bs.isSelected() && bg.isSelected()){
           data[0] = bs.getText();data[3] = bg.getText();data[1] = "";data[2] = "";data[4] = "";
       }
       else if(bs.isSelected() && bw.isSelected()){
           data[0] = bs.getText();data[4] = bw.getText();data[1] = "";data[2] = "";data[3] = "";
       }
       else if(bl.isSelected() && bb.isSelected()){
           data[1] = bl.getText();data[2] = bb.getText();data[0] = "";data[3] = "";data[4] = "";
       }
       else if(bl.isSelected() && bg.isSelected()){
           data[1] = bl.getText();data[3] = bg.getText();data[0] = "";data[2] = "";data[4] = "";
       }
       else if(bl.isSelected() && bw.isSelected()){
           data[1] = bl.getText();data[4] = bw.getText();data[0] = "";data[2] = "";data[4] = "";
       }
       else if(bb.isSelected() && bg.isSelected()){
           data[2] = bb.getText();data[3] = bg.getText();data[0] = "";data[1] = "";data[4] = "";
       }
       else if(bb.isSelected() && bw.isSelected()){
           data[2] = bb.getText();data[4] = bw.getText();data[0] = "";data[1] = "";data[3] = "";
       }
       else if(bg.isSelected() && bw.isSelected()){
           data[3] = bg.getText();data[4] = bw.getText();data[0] = "";data[1] = "";data[2] = "";
       }
       else if(bs.isSelected()){
           data[0] = bs.getText();data[1] = "";data[2] = "";data[3] = "";data[4] = "";
       }
       else if(bl.isSelected()){
           data[1] = bl.getText();data[0] = "";data[2] = "";data[3] = "";data[4] = "";
       }
       else if(bb.isSelected()){
           data[2] = bb.getText();data[0] = "";data[1] = "";data[3] = "";data[4] = "";
       }
       else if(bg.isSelected()){
           data[3] = bg.getText();data[0] = "";data[1] = "";data[2] = "";data[4] = "";
       }
       else if(bw.isSelected()){
           data[4] = bw.getText();data[0] = "";data[1] = "";data[2] = "";data[3] = "";
       }
       model.addRow(data);
    }//GEN-LAST:event_tambahkanActionPerformed

    private void hapussemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapussemuaActionPerformed
        int baris = tb.getRowCount();
        
        if(data[0] == null||data[1] == null||data[2] == null||data[3] == null||data[4] == null){
            JOptionPane.showMessageDialog(this, "Belum ada data yang dimasukan");
        }
        else{
           for(int i=baris-1;i>=0;i--){
            model.removeRow(i);
        } 
        }
        
    }//GEN-LAST:event_hapussemuaActionPerformed

    private void masukandataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masukandataActionPerformed
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        
        mainpanel.add(inputpanel);
        mainpanel.repaint();
        mainpanel.revalidate();
    }//GEN-LAST:event_masukandataActionPerformed

    private void analisisaprioriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analisisaprioriActionPerformed
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        
        mainpanel.add(analisispanel);
        mainpanel.repaint();
        mainpanel.revalidate();
    }//GEN-LAST:event_analisisaprioriActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        int kb = JOptionPane.YES_NO_OPTION;
        int kr = JOptionPane.showConfirmDialog(this,"Apakah anda yakin akan keluar?", "PERINGATAN",kb);
        
        if(kr==0){
            System.exit(0);
        }
        else{
            
        }
    }//GEN-LAST:event_keluarActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        int baris = tb.getSelectedRow();
        
        if(baris==-1){
            JOptionPane.showMessageDialog(this, "Anda belum memilih data yang akan dihapus");
        }
        else{
            model.removeRow(baris);
        }
        
    }//GEN-LAST:event_hapusActionPerformed

    private void detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailActionPerformed
        String c1 = "SRIWIJAYA";String c2 = "LION";String c3 = "BATIK";
        String c4 = "GARUDA";String c5 = "WINGS";
        int jbaris = tb.getRowCount();
        float a1=0;float a2=0;float a3=0;float a4=0;float a5=0;
        
        float x1=0;float x2=0;float x3=0;float x4=0;float x5=0;
        float x6=0;float x7=0;float x8=0;float x9=0;float x10=0;
        float x11=0;float x12=0;float x13=0;float x14=0;float x15=0;
        float x16=0;float x17=0;float x18=0;float x19=0;float x20=0;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0))){
                a1++;
            }
        }
        float sp1 = (a1/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1))){
                a2++;
            }
        }
        float sp2 = (a2/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2))){
                a3++;
            }
        }
        float sp3 = (a3/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3))){
                a4++;
            }
        }
        float sp4 = (a4/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4))){
                a5++;
            }
        }
        float sp5 = (a5/jbaris)*100;
        
        ///===============================================================
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c2.equals(tb.getValueAt(i, 1))){
                x1++;
            }
        }
        float hasil1 = (x1/jbaris)*100;
        float f1 = (x1/a1)*100;
        float total1=(hasil1*f1)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c3.equals(tb.getValueAt(i, 2))){
                x2++;
            }
        }
        float hasil2 = (x2/jbaris)*100;
        float f2 = (x2/a1)*100;
        float total2=(hasil2*f2)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c4.equals(tb.getValueAt(i, 3))){
                x3++;
            }
        }
        float hasil3 = (x3/jbaris)*100;
        float f3 = (x3/a1)*100;
        float total3=(hasil3*f3)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c5.equals(tb.getValueAt(i, 4))){
                x4++;
            }
        }
        float hasil4 = (x4/jbaris)*100;
        float f4 = (x4/a1)*100;
        float total4=(hasil4*f4)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c3.equals(tb.getValueAt(i, 2))){
                x5++;
            }
        }
        float hasil5 = (x5/jbaris)*100;
        float f5 = (x5/a2)*100;
        float total5=(hasil5*f5)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c4.equals(tb.getValueAt(i, 3))){
                x6++;
            }
        }
        float hasil6 = (x6/jbaris)*100;
        float f6 = (x6/a2)*100;
        float total6=(hasil6*f6)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c5.equals(tb.getValueAt(i, 2))){
                x7++;
            }
        }
        float hasil7 = (x7/jbaris)*100;
        float f7 = (x7/a2)*100;
        float total7=(hasil7*f7)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c4.equals(tb.getValueAt(i, 3))){
                x8++;
            }
        }
        float hasil8 = (x8/jbaris)*100;
        float f8 = (x8/a3)*100;
        float total8=(hasil8*f8)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c5.equals(tb.getValueAt(i, 4))){
                x9++;
            }
        }
        float hasil9 = (x9/jbaris)*100;
        float f9 = (x9/a3)*100;
        float total9=(hasil9*f9)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c5.equals(tb.getValueAt(i, 4))){
                x10++;
            }
        }
        float hasil10 = (x10/jbaris)*100;
        float f10 = (x10/a4)*100;
        float total10=(hasil10*f10)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c1.equals(tb.getValueAt(i, 0))){
                x11++;
            }
        }
        float hasil11 = (x11/jbaris)*100;
        float f11 = (x11/a2)*100;
        float total11=(hasil11*f11)*100 ;
        
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c1.equals(tb.getValueAt(i, 0))){
                x12++;
            }
        }
        float hasil12 = (x12/jbaris)*100;
        float f12 = (x12/a3)*100;
        float total12=(hasil12*f12)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c1.equals(tb.getValueAt(i, 0))){
                x13++;
            }
        }
        float hasil13 = (x13/jbaris)*100;
        float f13 = (x13/a4)*100;
        float total13=(hasil13*f13)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c1.equals(tb.getValueAt(i, 0))){
                x14++;
            }
        }
        float hasil14 = (x14/jbaris)*100;
        float f14 = (x14/a5)*100;
        float total14=(hasil14*f14)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c2.equals(tb.getValueAt(i, 1))){
                x15++;
            }
        }
        float hasil15 = (x15/jbaris)*100;
        float f15 = (x15/a3)*100;
        float total15=(hasil15*f15)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c2.equals(tb.getValueAt(i, 1))){
                x16++;
            }
        }
        float hasil16 = (x16/jbaris)*100;
        float f16 = (x16/a4)*100;
        float total16=(hasil16*f16)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c2.equals(tb.getValueAt(i, 1))){
                x17++;
            }
        }
        float hasil17 = (x17/jbaris)*100;
        float f17 = (x7/a5)*100;
        float total17=(hasil17*f17)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c3.equals(tb.getValueAt(i, 2))){
                x18++;
            }
        }
        float hasil18 = (x18/jbaris)*100;
        float f18 = (x18/a4)*100;
        float total18=(hasil18*f18)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c3.equals(tb.getValueAt(i, 2))){
                x19++;
            }
        }
        float hasil19 = (x19/jbaris)*100;
        float f19 = (x19/a5)*100;
        float total19=(hasil19*f19)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c4.equals(tb.getValueAt(i, 3))){
                x20++;
            }
        }
        float hasil20 = (x20/jbaris)*100;
        float f20 = (x20/a5)*100;
        float total20=(hasil20*f20)*100 ;
        
        hasil.setText(
                "Kombinasi 2 item"
                +"\nIF sriwijaya THEN lion"+"  "+total1+"          IF lion THEN sriwijaya"+"  "+total11
                +"\nIF sriwijaya THEN batik"+"  "+total2+"         IF batik THEN sriwijaya"+"  "+total12
                +"\nIF sriwijaya THEN garuda"+"  "+total3+"        IF garuda THEN sriwijaya"+"  "+total13
                +"\nIF sriwijaya THEN wings"+"  "+total4+"         IF wings THEN sriwijaya"+"  "+total14
                +"\nIF lion THEN batik"+"  "+total5+"              IF batik THEN lion"+"  "+total15
                +"\nIF lion THEN garuda"+"  "+total6+"             IF garuda THEN lion"+"  "+total16
                +"\nIF lion THEN wings"+"  "+total7+"              IF wings THEN lion"+"  "+total17
                +"\nIF batik THEN garuda"+"  "+total8+"            IF garuda THEN batik"+"  "+total18
                +"\nIF batik THEN wings"+"  "+total9+"             IF wings THEN batik"+"  "+total19
                +"\nIF garuda THEN wings"+"  "+total10+"           IF wings THEN garuda"+"  "+total20);
    }//GEN-LAST:event_detailActionPerformed

    private void hslActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hslActionPerformed
 
        String c1 = "SRIWIJAYA";String c2 = "LION";String c3 = "BATIK";
        String c4 = "GARUDA";String c5 = "WINGS";
        int jbaris = tb.getRowCount();
        float a1=0;float a2=0;float a3=0;float a4=0;float a5=0;
        
        float x1=0;float x2=0;float x3=0;float x4=0;float x5=0;
        float x6=0;float x7=0;float x8=0;float x9=0;float x10=0;
        float x11=0;float x12=0;float x13=0;float x14=0;float x15=0;
        float x16=0;float x17=0;float x18=0;float x19=0;float x20=0;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0))){
                a1++;
            }
        }
        float sp1 = (a1/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1))){
                a2++;
            }
        }
        float sp2 = (a2/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2))){
                a3++;
            }
        }
        float sp3 = (a3/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3))){
                a4++;
            }
        }
        float sp4 = (a4/jbaris)*100;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4))){
                a5++;
            }
        }
        float sp5 = (a5/jbaris)*100;
        
        ///===============================================================
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c2.equals(tb.getValueAt(i, 1))){
                x1++;
            }
        }
        float hasil1 = (x1/jbaris)*100;
        float f1 = (x1/a1)*100;
        float total1=(hasil1*f1)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c3.equals(tb.getValueAt(i, 2))){
                x2++;
            }
        }
        float hasil2 = (x2/jbaris)*100;
        float f2 = (x2/a1)*100;
        float total2=(hasil2*f2)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c4.equals(tb.getValueAt(i, 3))){
                x3++;
            }
        }
        float hasil3 = (x3/jbaris)*100;
        float f3 = (x3/a1)*100;
        float total3=(hasil3*f3)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c1.equals(tb.getValueAt(i, 0)) && c5.equals(tb.getValueAt(i, 4))){
                x4++;
            }
        }
        float hasil4 = (x4/jbaris)*100;
        float f4 = (x4/a1)*100;
        float total4=(hasil4*f4)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c3.equals(tb.getValueAt(i, 2))){
                x5++;
            }
        }
        float hasil5 = (x5/jbaris)*100;
        float f5 = (x5/a2)*100;
        float total5=(hasil5*f5)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c4.equals(tb.getValueAt(i, 3))){
                x6++;
            }
        }
        float hasil6 = (x6/jbaris)*100;
        float f6 = (x6/a2)*100;
        float total6=(hasil6*f6)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c5.equals(tb.getValueAt(i, 2))){
                x7++;
            }
        }
        float hasil7 = (x7/jbaris)*100;
        float f7 = (x7/a2)*100;
        float total7=(hasil7*f7)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c4.equals(tb.getValueAt(i, 3))){
                x8++;
            }
        }
        float hasil8 = (x8/jbaris)*100;
        float f8 = (x8/a3)*100;
        float total8=(hasil8*f8)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c5.equals(tb.getValueAt(i, 4))){
                x9++;
            }
        }
        float hasil9 = (x9/jbaris)*100;
        float f9 = (x9/a3)*100;
        float total9=(hasil9*f9)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c5.equals(tb.getValueAt(i, 4))){
                x10++;
            }
        }
        float hasil10 = (x10/jbaris)*100;
        float f10 = (x10/a4)*100;
        float total10=(hasil10*f10)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c2.equals(tb.getValueAt(i, 1)) && c1.equals(tb.getValueAt(i, 0))){
                x11++;
            }
        }
        float hasil11 = (x11/jbaris)*100;
        float f11 = (x11/a2)*100;
        float total11=(hasil11*f11)*100 ;
        
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c1.equals(tb.getValueAt(i, 0))){
                x12++;
            }
        }
        float hasil12 = (x12/jbaris)*100;
        float f12 = (x12/a3)*100;
        float total12=(hasil12*f12)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c1.equals(tb.getValueAt(i, 0))){
                x13++;
            }
        }
        float hasil13 = (x13/jbaris)*100;
        float f13 = (x13/a4)*100;
        float total13=(hasil13*f13)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c1.equals(tb.getValueAt(i, 0))){
                x14++;
            }
        }
        float hasil14 = (x14/jbaris)*100;
        float f14 = (x14/a5)*100;
        float total14=(hasil14*f14)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c3.equals(tb.getValueAt(i, 2)) && c2.equals(tb.getValueAt(i, 1))){
                x15++;
            }
        }
        float hasil15 = (x15/jbaris)*100;
        float f15 = (x15/a3)*100;
        float total15=(hasil15*f15)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c2.equals(tb.getValueAt(i, 1))){
                x16++;
            }
        }
        float hasil16 = (x16/jbaris)*100;
        float f16 = (x16/a4)*100;
        float total16=(hasil16*f16)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c2.equals(tb.getValueAt(i, 1))){
                x17++;
            }
        }
        float hasil17 = (x17/jbaris)*100;
        float f17 = (x7/a5)*100;
        float total17=(hasil17*f17)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c4.equals(tb.getValueAt(i, 3)) && c3.equals(tb.getValueAt(i, 2))){
                x18++;
            }
        }
        float hasil18 = (x18/jbaris)*100;
        float f18 = (x18/a4)*100;
        float total18=(hasil18*f18)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c3.equals(tb.getValueAt(i, 2))){
                x19++;
            }
        }
        float hasil19 = (x19/jbaris)*100;
        float f19 = (x19/a5)*100;
        float total19=(hasil19*f19)*100 ;
        
        for(int i=0; i<jbaris;i++){
            if(c5.equals(tb.getValueAt(i, 4)) && c4.equals(tb.getValueAt(i, 3))){
                x20++;
            }
        }
        float hasil20 = (x20/jbaris)*100;
        float f20 = (x20/a5)*100;
        float total20=(hasil20*f20)*100 ;
        
        float array[] = {total1,total2,total3,total4,total5,total6,total7,total8,total9,total10,total11,total12,total13,total14,total15,total16,total17,total18,total19,total20};
        float max = array[0];
        
        for(int z=0; z<array.length;z++){
            if(max < array[z]){
                max = array[z];
            }
        }
        
        if(max==array[0]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF sriwijaya THEN lion memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket sriwijaya maka akan membeli tiket lion"
                +"\nTiket sriwijaya dan lion memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[1]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF sriwijaya THEN batik memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket sriwijaya maka akan membeli tiket batik"
                +"\nTiket sriwijaya dan batik memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[2]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF sriwijaya THEN garuda memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket sriwijaya maka akan membeli tiket garuda"
                +"\nTiket sriwijaya dan garuda memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[3]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF sriwijaya THEN wings memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket sriwijaya maka akan membeli tiket wings"
                +"\nTiket sriwijaya dan wings memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[4]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF lion THEN batik memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket lion maka akan membeli tiket batik"
                +"\nTiket lion dan batik memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[5]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF lion THEN garuda memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket lion maka akan membeli tiket garuda"
                +"\nTiket lion dan garuda memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[6]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF lion THEN wings memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket lion maka akan membeli tiket wings"
                +"\nTiket lion dan wings memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[7]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF batik THEN garuda memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket batik maka akan membeli tiket garuda"
                +"\nTiket batik dan garuda memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[8]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF batik THEN wings memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket batik maka akan membeli tiket wings"
                +"\nTiket batik dan wings memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[9]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF garuda THEN wings memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket garuda maka akan membeli tiket wings"
                +"\nTiket garuda dan wings memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[10]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF lion THEN sriwijaya memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket lion maka akan membeli tiket sriwijaya"
                +"\nTiket lion dan sriwijaya memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[11]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF batik THEN sriwijaya memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket batik maka akan membeli tiket sriwijaya"
                +"\nTiket batik dan sriwijaya memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[12]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF garuda THEN sriwijaya memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket garuda maka akan membeli tiket sriwijaya"
                +"\nTiket garuda dan sriwijaya memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[13]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF wings THEN sriwijaya memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket wings maka akan membeli tiket sriwijaya"
                +"\nTiket wings dan sriwijaya memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[14]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF batik THEN lion memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket batik maka akan membeli tiket lion"
                +"\nTiket batik dan lion memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[15]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF garuda THEN lion memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket garuda maka akan membeli tiket lion"
                +"\nTiket garuda dan lion memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[16]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF wings THEN lion memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket wings maka akan membeli tiket lion"
                +"\nTiket wings dan lion memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[17]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF garuda THEN batik memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket garuda maka akan membeli tiket batik"
                +"\nTiket garuda dan batik memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[18]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF wings THEN batik memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket wings maka akan membeli tiket batik"
                +"\nTiket wings dan batik memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
        else if(max==array[19]){
            hasil.setText(
                "Diketahui dari semua kombinasi 2 item, IF wings THEN garuda memiliki nilai paling tinggi"
                +"\nJadi dapat disimpulkan jika membeli tiket wings maka akan membeli tiket garuda"
                +"\nTiket wings dan garuda memiliki potensi untuk lebih banyak dibeli oleh konsumen");
        }
    }//GEN-LAST:event_hslActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnalisisApriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnalisisApriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnalisisApriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnalisisApriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnalisisApriori().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analisisapriori;
    private javax.swing.JPanel analisispanel;
    private javax.swing.JRadioButton bb;
    private javax.swing.JRadioButton bg;
    private javax.swing.JRadioButton bl;
    private javax.swing.JPanel bodypanel;
    private javax.swing.JRadioButton bs;
    private javax.swing.JRadioButton bw;
    private javax.swing.JButton detail;
    private javax.swing.JButton hapus;
    private javax.swing.JButton hapussemua;
    private javax.swing.JTextArea hasil;
    private javax.swing.JButton hsl;
    private javax.swing.JPanel inputpanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton keluar;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JButton masukandata;
    private javax.swing.JPanel menupanel;
    private javax.swing.JTextField nc;
    private javax.swing.JTextField ns;
    private javax.swing.JButton tambahkan;
    private javax.swing.JTable tb;
    private javax.swing.JPanel tittlepanel;
    // End of variables declaration//GEN-END:variables
}
